% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hippo.R
\name{compute_test_statistic}
\alias{compute_test_statistic}
\title{#' Likelihood ratio test for dispersion parameter = 0
#'
#' @param y a vector of each gene across cells
#' @return p-value for the significance for non-zero dispersion parameter
#' @export
pois_vs_nb = function(y){
  require(MASS)
  pois = sum(dpois(y, mean(y), log = TRUE))
  if(mean(y) > var(y)){
    return(1)
  }else{
    nb = fitdistrplus::fitdist(y, "nbinom",
                               start = list(size = 0.1, prob = 0.1),
                               lower = c(0, 0), upper = c(10^10, 1))
    chi = 2 * (logLik(nb) - pois)
    p = pchisq(chi, df = 1, lower.tail = FALSE)
  }
  return(p)
}
#' Change ENSG id's to HGNC symbols
#'
#' @param ensg a vector of ENSG names
#' @return a dataframe of both ENSG id's and HGNC symbol
#' @export
ensg_to_hgnc = function(ensg){
  maps = read.table("~/Work/SC/data/Annotations/hgnc_ensembl.txt", header=TRUE, stringsAsFactors = FALSE)
  maps2 = data.frame(ensg = ensg,
                     hgnc = maps$hgnc[match(ensg, maps$ensembl)])
  maps2$ensg = as.character(maps2$ensg)
  maps2$hgnc = as.character(maps2$hgnc)
  ind_na = which(is.na(maps2$hgnc))
  ind_blank = which(maps2$hgnc=="")
  hgnc = maps2$hgnc
  hgnc[c(ind_na, ind_blank)] = maps2$ensg[c(ind_na, ind_blank)]
  return(hgnc)
}
Conduct feature selection}
\usage{
compute_test_statistic(df)
}
\arguments{
\item{df}{pre-processed data frame}
}
\value{
data frame with added columns with test results
}
\description{
#' Likelihood ratio test for dispersion parameter = 0
#'
#' @param y a vector of each gene across cells
#' @return p-value for the significance for non-zero dispersion parameter
#' @export
pois_vs_nb = function(y){
  require(MASS)
  pois = sum(dpois(y, mean(y), log = TRUE))
  if(mean(y) > var(y)){
    return(1)
  }else{
    nb = fitdistrplus::fitdist(y, "nbinom",
                               start = list(size = 0.1, prob = 0.1),
                               lower = c(0, 0), upper = c(10^10, 1))
    chi = 2 * (logLik(nb) - pois)
    p = pchisq(chi, df = 1, lower.tail = FALSE)
  }
  return(p)
}
#' Change ENSG id's to HGNC symbols
#'
#' @param ensg a vector of ENSG names
#' @return a dataframe of both ENSG id's and HGNC symbol
#' @export
ensg_to_hgnc = function(ensg){
  maps = read.table("~/Work/SC/data/Annotations/hgnc_ensembl.txt", header=TRUE, stringsAsFactors = FALSE)
  maps2 = data.frame(ensg = ensg,
                     hgnc = maps$hgnc[match(ensg, maps$ensembl)])
  maps2$ensg = as.character(maps2$ensg)
  maps2$hgnc = as.character(maps2$hgnc)
  ind_na = which(is.na(maps2$hgnc))
  ind_blank = which(maps2$hgnc=="")
  hgnc = maps2$hgnc
  hgnc[c(ind_na, ind_blank)] = maps2$ensg[c(ind_na, ind_blank)]
  return(hgnc)
}
Conduct feature selection
}
